{"version":3,"sources":["reducers/calc.js","utils/actionTypes.js","reducers/index.js","utils/theme.js","components/Calc.js","actions/index.js","App.js","serviceWorker.js","index.js"],"names":["initialAppState","weight","rep","nextWeight","nextRep","calc","state","arguments","length","undefined","action","console","log","type","_state$action$evInfo","Object","objectSpread","evInfo","reducer","combineReducers","theme","createMuiTheme","palette","primary","blue","secondary","yellow","Calc","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateInput","input","setState","onNumChange","initialState","_this2","a","react_default","createElement","Paper","Grid","container","alignItems","item","TextField","id","label","defaultValue","InputLabelProps","shrink","margin","onChange","event","target","value","toFixed","React","Component","connect","useStyles","makeStyles","root","flexGrow","withTheme","classes","MuiThemeProvider","className","AppBar","position","color","Toolbar","Typography","variant","components_Calc","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6aa41bf3.chunk.js","sourcesContent":["import * as actionTypes from '../utils/actionTypes';\r\n\r\nconst initialAppState = {\r\n    weight:0,\r\n    rep:0,\r\n    nextWeight:0,\r\n    nextRep: 0\r\n};\r\n\r\nconst calc = (state = initialAppState, action) =>{\r\n    console.log(\"REDU\");\r\n    console.log(state);\r\n    console.log(action);\r\n    if(action.type===actionTypes.NUM_CHANGE){\r\n        const {weight, rep, nextWeight} = {...state, ...action.evInfo};\r\n        console.log(\"NEXT\");\r\n        console.log([weight, rep, nextWeight]);\r\n        const nextRep = weight*rep/nextWeight || 0;\r\n        console.log([state, nextRep]);\r\n        console.log({\r\n            ...state, ...{weight, rep, nextWeight, nextRep}\r\n        });\r\n        return {\r\n            ...state, ...{weight, rep, nextWeight, nextRep}\r\n        };\r\n    }else if(action.type===actionTypes.CLICK_CALC){\r\n        return {...state};\r\n\r\n    }\r\n    return {...state};\r\n};\r\n\r\nexport default calc;\r\n\r\n","export const NUM_CHANGE=\"NUM_CHANGE\";\r\nexport const CLICK_CALC=\"CLICK_CALC\";\r\n","import { combineReducers } from 'redux';\r\nimport calc from './calc';\r\nconst reducer = combineReducers({\r\n    calc,\r\n  });\r\n  \r\n  export default reducer;","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport yellow from '@material-ui/core/colors/yellow';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark', // ベースのテーマ lightかdarkか\r\n    primary: blue, // primaryのカラー\r\n    secondary: yellow, // secondaryのカラー\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {onNumChange} from '../actions';\r\n\r\nclass Calc extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.initialState = {\r\n            weight:0,\r\n            rep:0,\r\n            nextWeight:0,\r\n            nextRep: 0\r\n        };\r\n    }\r\n    updateInput = input => {\r\n        console.log(\"input\");\r\n        console.log(input);\r\n        this.setState({ input });\r\n        this.props.onNumChange(input);\r\n    };\r\n//const Calc =({weight,rep,nextWeight,nextRep}) => {\r\n    render(){\r\n        const a = this.props.calc || this.initialState;\r\n        console.log(\"a\");\r\n        console.log(a);\r\n        const {weight,rep,nextWeight, nextRep} =a;\r\n        console.log(\"RENDER\")\r\n        console.log([weight,rep,nextWeight,nextRep]);;\r\n  return (\r\n    <Paper>\r\n        <Grid container  alignItems=\"flex-end\">\r\n                <Grid container>\r\n                    <Grid item><TextField\r\n                    id=\"weight\"\r\n                    label=\"Weight\"\r\n                    defaultValue={weight}\r\n                    type=\"number\"\r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                    }}\r\n                    margin=\"normal\"\r\n                    onChange={event=>this.updateInput({weight:event.target.value})}\r\n                /></Grid>\r\n                    <Grid item><TextField\r\n                    id=\"rep\"\r\n                    label=\"Rep\"\r\n                    defaultValue={rep}\r\n                    type=\"number\"\r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                    }}\r\n                    margin=\"normal\"\r\n                    onChange={event=>this.updateInput({rep:event.target.value})}\r\n                /></Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item><TextField\r\n                    id=\"newWeight\"\r\n                    label=\"New Weight\"\r\n                    defaultValue={nextWeight}\r\n                    type=\"number\"\r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                    }}\r\n                    margin=\"normal\"\r\n                    onChange={event=>this.updateInput({nextWeight:event.target.value})}\r\n                /></Grid>\r\n                    <Grid item><TextField\r\n                    id=\"nextRep\"\r\n                    label=\"New Rep\"\r\n                    value={nextRep.toFixed(1)}\r\n                    type=\"number\"\r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                    }}\r\n                    margin=\"normal\"\r\n                /></Grid>\r\n                </Grid>\r\n        </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(\"mapStateToProps\");\r\n    console.log(state);\r\n    return state;    \r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    {onNumChange}\r\n)(Calc);","import * as actionTypes from '../utils/actionTypes';\r\n\r\n\r\n// export const NUM_CHANGE=\"NUM_CHANGE\";\r\nexport const onNumChange = (evInfo)=>{\r\n    //console.log(\"ONNUMCHANGE\");console.log(evInfo); \r\n    return {\r\n    type: actionTypes.NUM_CHANGE,\r\n    evInfo: evInfo\r\n};};\r\n// export const CLICK_CALC=\"CLICK_CALC\";\r\nexport const onClickCalc = ()=>({\r\n    type: actionTypes.CLICK_CALC\r\n});\r\n","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withTheme } from '@material-ui/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { theme } from './utils/theme';\n\n// import Button from '@material-ui/core/Button';\nimport Calc from './components/Calc';\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\n  const App=() => {\n  const classes = useStyles();\n  return (\n    <MuiThemeProvider theme={theme} >\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Rep Counter\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Calc/>\n    </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default withTheme(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}><App /></Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}